{"meta":{"title":"My Blog","subtitle":"","description":"","author":"Vapor","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2023-09-06T14:53:40.000Z","updated":"2023-09-06T14:53:40.853Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"coffee","date":"2023-09-06T14:56:22.000Z","updated":"2023-09-06T14:56:22.935Z","comments":true,"path":"coffee/index.html","permalink":"http://example.com/coffee/index.html","excerpt":"","text":""}],"posts":[{"title":"A draft","slug":"a-draft","date":"2023-09-06T12:00:32.000Z","updated":"2023-09-06T16:28:27.058Z","comments":true,"path":"2023/09/06/a-draft/","link":"","permalink":"http://example.com/2023/09/06/a-draft/","excerpt":"","text":"创建草稿：首先，在 Hexo 博客项目的根目录下，使用以下命令创建一篇新的草稿文章： 1hexo new draft my-new-draft 发布草稿：发布草稿： 当你准备好将草稿发布为一篇正式文章时，使用以下命令发布它： 1hexo publish draft my-new-draft 这将移动草稿文件从 source&#x2F;_drafts 目录到 source&#x2F;_posts 目录，并将其日期信息更新为当前日期和时间。 生成静态网站文件：在命令行中，进入你的 Hexo 项目的根目录，然后运行以下命令来生成静态网站文件： 1hexo generate 这个命令会根据你在 Hexo 项目中的配置生成静态 HTML 文件和其他资源文件。生成的文件会存储在 Hexo 项目的 public 目录下。 预览你的修改（可选）：在生成静态文件后，你可以在本地预览你的网站，以确保修改没有问题。你可以使用以下命令启动本地服务器：1hexo server 然后在浏览器中访问 http://localhost:4000 来查看网站。 部署你的网站：一旦你确认修改没有问题，你可以使用以下命令来将网站部署到远程服务器或托管平台： 1hexo deploy 这会自动将生成的静态文件推送到 GitHub Pages 上。如果你使用其他托管服务或者服务器，你需要相应地配置和执行部署命令。 提交你的修改到 Git 仓库：在你发布网站之后，确保将你的修改和生成的文件提交到你的 Git 仓库，以便跟踪网站的历史和与团队成员协作。你可以使用以下命令来提交：123git add .git commit -m &quot;描述你的修改&quot;git push git init初始化一个新的 Git 仓库。该命令在当前目录下创建一个名为 .git 的文件夹，用于存储 Git 仓库的配置和历史记录。 git clone &lt;仓库URL&gt;克隆远程 Git 仓库到本地。通过提供仓库的 URL，将远程仓库的所有文件和历史记录复制到本地。 git add &lt;文件或目录&gt;将文件或目录的更改添加到 Git 的暂存区。在提交前，使用该命令将要保存的更改移动到暂存区。 git commit -m &quot;提交消息&quot;提交暂存区中的更改，并创建一个新的提交。提交消息通常用于描述此次提交的目的或内容。 git status显示工作目录和暂存区中文件的状态。它会告诉你哪些文件已修改、哪些文件已添加到暂存区、哪些文件未跟踪等信息。 git log显示仓库的提交历史记录。它会列出每个提交的作者、日期、提交消息以及哈希值。 git branch显示当前仓库的所有分支。当前分支会用星号 * 标记。 git checkout &lt;分支或提交&gt;切换到指定分支或提交。用于切换工作目录中的文件版本，可以是分支名或提交的哈希值。 git pull从远程仓库拉取最新的更改并合并到当前分支。通常与 git fetch 一起使用，以更新本地仓库。 git push将本地分支的更改推送到远程仓库。通常需要指定远程仓库的名称和分支名，例如 git push origin master。","categories":[],"tags":[]}],"categories":[],"tags":[]}